<?xml version='1.0' encoding='UTF-8'?>
<!--
# Copyright 2015 47Lining LLC.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
-->
<project>
  <actions/>
  <description>NOT CURRENTLY SUPPORTED</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <jp.ikedam.jenkins.plugins.extensible__choice__parameter.ExtensibleChoiceParameterDefinition plugin="extensible-choice-parameter@1.2.2">
          <name>CustomerCageContainer</name>
          <description></description>
          <editable>false</editable>
          <choiceListProvider class="jp.ikedam.jenkins.plugins.extensible_choice_parameter.SystemGroovyChoiceListProvider">
            <scriptText>slurper = new groovy.json.JsonSlurper()
result = slurper.parse(new FileReader(new File(&quot;/var/lib/jenkins/cagesdb.json&quot;)))
def names = []
result.customers.each() {
  custname = it.name
  it.cages.each() {
    cagename = it.name
    it.containers.each() {
      names.add(custname+&quot;:&quot;+cagename+&quot;:&quot;+it.name)
    }
  }
}
return names</scriptText>
            <usePredefinedVariables>false</usePredefinedVariables>
          </choiceListProvider>
        </jp.ikedam.jenkins.plugins.extensible__choice__parameter.ExtensibleChoiceParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>echo Deleting stack set $CustomerCageContainer
CUST=&quot;$(echo &quot;$CustomerCageContainer&quot; | cut -d &apos;:&apos; -f 1)&quot;
CAGE=&quot;$(echo &quot;$CustomerCageContainer&quot; | cut -d &apos;:&apos; -f 2)&quot;
CONT=&quot;$(echo &quot;$CustomerCageContainer&quot; | cut -d &apos;:&apos; -f 3)&quot;
export REPO_HOME=$JENKINS_HOME/nucleator
python $REPO_HOME/scripts/cagesdb.py container delete --customer &quot;$CUST&quot; --cage &quot;$CAGE&quot; --name &quot;$CONT&quot;</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>