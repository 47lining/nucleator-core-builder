{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Provision a nucleator instance on the public subnet of an existing Cage.  ssh comms for the instance must transit the bastion instance in the Cage where the new instance is being provisioned.",
    "Parameters": {
        "PublicInstanceName": {
            "Description": "Name Tag Prefix for the instance",
            "Type": "String"
        },
        "NucleatorGroup": {
            "Description": "Name of the nucleator group that the instance should assume",
            "Type": "String"
        },
        "InstanceType": {
            "Description": "AWS EC2 Instance Type for the instance",
            "Type": "String"
        },
        "KeypairName": {
            "Description": "Name of and existing EC2 KeyPair to enable SSH access to the instance",
            "Type": "String"
        },
        "ImageId": {
            "Type": "String",
            "Description": "AMI You want to use"
        },
        "ServiceRole": {
            "Type": "CommaDelimitedList",
            "Description": "String including comma-separated list of Role name(s) to use to establish an Instance Profile to associate with the instance"
        }
    },
    "Resources": {
        "PublicSubnetInstance": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": "{{template_s3_accessor_url}}/{{stackset_instance_name}}instance.json",
                "Parameters": {
                    "InstanceName": {
			"Fn::Join": [
			    ".",
			    [
				{ "Ref": "PublicInstanceName" },
				"{{cage_name}}",
				"{{customer_domain}}"
			    ]
			]
		    },
                    "NucleatorGroup": { "Ref": "NucleatorGroup" },
                    "InstanceType": {
                        "Ref": "InstanceType"
                    },
                    "KeypairName": {
                        "Ref": "KeypairName"
                    },
                    "ImageId": {
			"Ref": "ImageId"
		    },
                    "ServiceRole": {
			"Fn::Join" : [ ",", { "Ref" : "ServiceRole" }]
		    },
                    "SubnetId": "{{ cage_provision_stack['stack_outputs']['PublicSubnet1Id'] }}",
                    "SecurityGroupId": {
                        "Ref": "PublicSubnetSecurityGroup"
                    }
                }
            }
        },
        "PublicSubnetIpAddress": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc",
                "InstanceId": {
                    "Fn::GetAtt": [
                        "PublicSubnetInstance",
                        "Outputs.InstanceId"
                    ]
                }
            }
        },
        "PublicSubnetDnsRecord": {
            "Type": "AWS::Route53::RecordSet",
            "Properties": {
                "HostedZoneName": "{{ cage_name }}.{{customer_domain}}.",
                "Comment": {
		    "Fn::Join": [
			" ",
			[
			    "A record for",
			    { "Ref": "PublicInstanceName" },
			    "server."
			]
		    ]
		},
                "Name": {
		    "Fn::Join": [
			".",
			[
			    { "Ref": "PublicInstanceName" },
			    "{{cage_name}}",
			    "{{customer_domain}}"
			]
		    ]
		},
                "Type": "A",
                "TTL": "300",
                "ResourceRecords": [
                    {
                        "Ref": "PublicSubnetIpAddress"
                    }
                ]
            }
        },
        "PublicSubnetSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable ssh access to / from the PublicSubnet host",
                "VpcId": "{{ cage_provision_stack['stack_outputs']['VpcId'] }}",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "SourceSecurityGroupId": "{{ cage_provision_stack['stack_outputs']['BastionSecurityGroupId'] }}"
                    }
                ],
                "SecurityGroupEgress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": "{{ network_topology["vpc_cidr"] }}"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "udp",
                        "FromPort": "53",
                        "ToPort": "53",
                        "CidrIp": "{{ network_topology["vpc_cidr"] }}"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "9418",
                        "ToPort": "9418",
                        "CidrIp": "0.0.0.0/0"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                ".",
                                [
				    "security",
                                    { "Ref": "PublicInstanceName" },
				    "{{cage_name}}",
				    "{{customer_name}}",
                                    "unresolvable"
                                ]
                            ]
                        }
                    },
		    { "Key": "NucleatorGroup", "Value": "networking" },
		    {{ nucleator_common_tags | to_json_fragment }}
                ]
            }
        }
    },
    "Outputs": {
        "InstanceId": {
            "Value": {
                "Ref": "PublicSubnetInstance"
            },
            "Description": "Instance Id of newly created instance"
        }, 
        "PublicIp": {
            "Value": {
		"Ref" : "PublicSubnetIpAddress"
	    },
            "Description": "Public IP of newly created instance"
        },
        "PrivateIp": {
            "Value": {
                "Fn::GetAtt": [
                    "PublicSubnetInstance",
                    "Outputs.PrivateIp"
                ]
            },
            "Description": "Private IP of newly created instance"
        },
        "SubnetId": {
	    "Value": "{{ cage_provision_stack['stack_outputs']['PublicSubnet1Id'] }}",
            "Description": "Subnet ID where the instance resides"
        },
        "AvailabilityZone": {
            "Value": {
                "Fn::GetAtt": [
                    "PublicSubnetInstance",
                    "Outputs.AvailabilityZone"
                ]
            },
            "Description": "Availability Zone where the instance resides"
        },
        "PublicSubnetSecurityGroupId": {
            "Value": {
                "Fn::GetAtt": [
                    "PublicSubnetInstance",
                    "Outputs.SecurityGroupId"
                ]
            },
            "Description": "Security Group of instance"
        }
    }
}
